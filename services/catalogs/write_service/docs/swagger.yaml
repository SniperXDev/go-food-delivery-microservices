definitions:
  dto.ProductDto:
    properties:
      createdAt:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
      productId:
        type: string
      updatedAt:
        type: string
    type: object
  dtos.CreateProductRequestDto:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  dtos.CreateProductResponseDto:
    properties:
      productId:
        type: string
    type: object
  dtos.GetProductByIdResponseDto:
    properties:
      product:
        $ref: '#/definitions/dto.ProductDto'
    type: object
  dtos.GetProductsResponseDto:
    properties:
      products:
        type: object
    type: object
  dtos.SearchProductsResponseDto:
    properties:
      products:
        type: object
    type: object
  updating_product.UpdateProductRequestDto:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  utils.FilterModel:
    properties:
      comparison:
        type: string
      field:
        type: string
      value:
        type: string
    type: object
info:
  contact:
    name: Mehdi Hadeli
    url: https://github.com/mehdihadeli
  description: Catalogs Write-Service Api.
  title: Catalogs Write-Service Api
  version: "1.0"
paths:
  /api/v1/products:
    get:
      consumes:
      - application/json
      description: Get all products
      parameters:
      - in: query
        name: orderBy
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.GetProductsResponseDto'
      summary: Get all product
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Create new product item
      parameters:
      - description: Product data
        in: body
        name: CreateProductRequestDto
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateProductRequestDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.CreateProductResponseDto'
      summary: Create product
      tags:
      - Products
  /api/v1/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete existing product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
      summary: Delete product
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: Get product by id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.GetProductByIdResponseDto'
      summary: Get product
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update existing product
      parameters:
      - description: Product data
        in: body
        name: UpdateProductRequestDto
        required: true
        schema:
          $ref: '#/definitions/updating_product.UpdateProductRequestDto'
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
      summary: Update product
      tags:
      - Products
  /api/v1/products/search:
    get:
      consumes:
      - application/json
      description: Search products
      parameters:
      - in: query
        name: orderBy
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: search
        type: string
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.SearchProductsResponseDto'
      summary: Search products
      tags:
      - Products
swagger: "2.0"
