// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	data "github.com/mehdihadeli/store-golang-microservice-sample/pkg/core/data"
	mock "github.com/stretchr/testify/mock"
)

// UnitOfWork is an autogenerated mock type for the UnitOfWork type
type UnitOfWork struct {
	mock.Mock
}

// SaveWithTx provides a mock function with given fields: ctx, action
func (_m *UnitOfWork) Do(ctx context.Context, action data.UnitOfWorkActionFunc) error {
	ret := _m.Called(ctx, action)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, data.UnitOfWorkActionFunc) error); ok {
		r0 = rf(ctx, action)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUnitOfWork interface {
	mock.TestingT
	Cleanup(func())
}

// NewUnitOfWork creates a new instance of UnitOfWork. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUnitOfWork(t mockConstructorTestingTNewUnitOfWork) *UnitOfWork {
	mock := &UnitOfWork{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
