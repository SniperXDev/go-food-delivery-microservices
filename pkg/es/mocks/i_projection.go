// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/mehdihadeli/store-golang-microservice-sample/pkg/es/models"
	mock "github.com/stretchr/testify/mock"
)

// IProjection is an autogenerated mock type for the IProjection type
type IProjection struct {
	mock.Mock
}

// ProcessEvent provides a mock function with given fields: ctx, streamEvent
func (_m *IProjection) ProcessEvent(ctx context.Context, streamEvent *models.StreamEvent) error {
	ret := _m.Called(ctx, streamEvent)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.StreamEvent) error); ok {
		r0 = rf(ctx, streamEvent)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIProjection interface {
	mock.TestingT
	Cleanup(func())
}

// NewIProjection creates a new instance of IProjection. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIProjection(t mockConstructorTestingTNewIProjection) *IProjection {
	mock := &IProjection{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
