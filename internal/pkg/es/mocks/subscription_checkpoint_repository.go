// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// SubscriptionCheckpointRepository is an autogenerated mock type for the SubscriptionCheckpointRepository type
type SubscriptionCheckpointRepository struct {
	mock.Mock
}

// Load provides a mock function with given fields: subscriptionId, ctx
func (_m *SubscriptionCheckpointRepository) Load(subscriptionId string, ctx context.Context) (uint64, error) {
	ret := _m.Called(subscriptionId, ctx)

	var r0 uint64
	if rf, ok := ret.Get(0).(func(string, context.Context) uint64); ok {
		r0 = rf(subscriptionId, ctx)
	} else {
		r0 = ret.Get(0).(uint64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, context.Context) error); ok {
		r1 = rf(subscriptionId, ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Store provides a mock function with given fields: subscriptionId, position, ctx
func (_m *SubscriptionCheckpointRepository) Store(subscriptionId string, position uint64, ctx context.Context) error {
	ret := _m.Called(subscriptionId, position, ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, uint64, context.Context) error); ok {
		r0 = rf(subscriptionId, position, ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewSubscriptionCheckpointRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewSubscriptionCheckpointRepository creates a new instance of SubscriptionCheckpointRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSubscriptionCheckpointRepository(t mockConstructorTestingTNewSubscriptionCheckpointRepository) *SubscriptionCheckpointRepository {
	mock := &SubscriptionCheckpointRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
