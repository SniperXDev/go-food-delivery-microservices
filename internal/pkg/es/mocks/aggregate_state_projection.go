// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/mehdihadeli/go-ecommerce-microservices/internal/pkg/core/domain"
	metadata "github.com/mehdihadeli/go-ecommerce-microservices/internal/pkg/core/metadata"

	mock "github.com/stretchr/testify/mock"
)

// AggregateStateProjection is an autogenerated mock type for the AggregateStateProjection type
type AggregateStateProjection struct {
	mock.Mock
}

// Apply provides a mock function with given fields: event, isNew
func (_m *AggregateStateProjection) Apply(event domain.IDomainEvent, isNew bool) error {
	ret := _m.Called(event, isNew)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.IDomainEvent, bool) error); ok {
		r0 = rf(event, isNew)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// fold provides a mock function with given fields: event, _a1
func (_m *AggregateStateProjection) fold(event domain.IDomainEvent, _a1 metadata.Metadata) error {
	ret := _m.Called(event, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.IDomainEvent, metadata.Metadata) error); ok {
		r0 = rf(event, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewAggregateStateProjection interface {
	mock.TestingT
	Cleanup(func())
}

// NewAggregateStateProjection creates a new instance of AggregateStateProjection. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAggregateStateProjection(t mockConstructorTestingTNewAggregateStateProjection) *AggregateStateProjection {
	mock := &AggregateStateProjection{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
