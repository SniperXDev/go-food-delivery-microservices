// Code generated by mockery v2.30.16. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UnsafeProductsServiceServer is an autogenerated mock type for the UnsafeProductsServiceServer type
type UnsafeProductsServiceServer struct {
	mock.Mock
}

type UnsafeProductsServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeProductsServiceServer) EXPECT() *UnsafeProductsServiceServer_Expecter {
	return &UnsafeProductsServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedProductsServiceServer provides a mock function with given fields:
func (_m *UnsafeProductsServiceServer) mustEmbedUnimplementedProductsServiceServer() {
	_m.Called()
}

// UnsafeProductsServiceServer_mustEmbedUnimplementedProductsServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedProductsServiceServer'
type UnsafeProductsServiceServer_mustEmbedUnimplementedProductsServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedProductsServiceServer is a helper method to define mock.On call
func (_e *UnsafeProductsServiceServer_Expecter) mustEmbedUnimplementedProductsServiceServer() *UnsafeProductsServiceServer_mustEmbedUnimplementedProductsServiceServer_Call {
	return &UnsafeProductsServiceServer_mustEmbedUnimplementedProductsServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedProductsServiceServer")}
}

func (_c *UnsafeProductsServiceServer_mustEmbedUnimplementedProductsServiceServer_Call) Run(run func()) *UnsafeProductsServiceServer_mustEmbedUnimplementedProductsServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeProductsServiceServer_mustEmbedUnimplementedProductsServiceServer_Call) Return() *UnsafeProductsServiceServer_mustEmbedUnimplementedProductsServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafeProductsServiceServer_mustEmbedUnimplementedProductsServiceServer_Call) RunAndReturn(run func()) *UnsafeProductsServiceServer_mustEmbedUnimplementedProductsServiceServer_Call {
	_c.Call.Return(run)
	return _c
}

// NewUnsafeProductsServiceServer creates a new instance of UnsafeProductsServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafeProductsServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafeProductsServiceServer {
	mock := &UnsafeProductsServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
